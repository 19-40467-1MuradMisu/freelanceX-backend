# Application
spring.application.name=notification-service
server.port=8086
server.servlet.context-path=/api
# Eureka Discovery Settings
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
eureka.instance.preferIpAddress=true
eureka.client.register-with-eureka=true
# Database
spring.datasource.url=jdbc:postgresql://postgres:5432/notification_service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# Kafka
logging.level.com=INFO
logging.level.org.apache.kafka=ERROR
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=contract.created:com.freelancex.notificationservice.dtos.contract.CreateContractEvent,\
  review.created:com.freelancex.notificationservice.dtos.rating.CreateRatingEvent
# Kafka Topics
kafka.topics.contract-created=contract.created
kafka.topics.review-created=review.created